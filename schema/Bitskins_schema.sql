-- MySQL Script generated by MySQL Workbench
-- Tue Jun  9 16:11:21 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bitskins_csgo
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bitskins_csgo` ;

-- -----------------------------------------------------
-- Schema bitskins_csgo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bitskins_csgo` DEFAULT CHARACTER SET utf8 ;
USE `bitskins_csgo` ;

-- -----------------------------------------------------
-- Table `bitskins_csgo`.`skin_state`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`skin_state` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`skin_set`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`skin_set` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`skin_rarity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`skin_rarity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`weapon_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`weapon_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`weapon`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`weapon` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NULL,
  `type` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_weapon_type_idx` (`type` ASC) VISIBLE,
  CONSTRAINT `fk_weapon_type`
    FOREIGN KEY (`type`)
    REFERENCES `bitskins_csgo`.`weapon_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`skin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`skin` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `image_url` VARCHAR(511) NULL,
  `skin_set` INT NULL,
  `skin_rarity` INT NULL,
  `has_StatTrak` TINYINT(1) NULL,
  `item_type` INT NULL,
  `sticker` INT NULL,
  `agent` INT NULL,
  `weapon` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_skin_set_idx` (`skin_set` ASC) VISIBLE,
  INDEX `fk_skin_rarity_idx` (`skin_rarity` ASC) VISIBLE,
  INDEX `fk_weapon_category_idx` (`weapon` ASC) VISIBLE,
  CONSTRAINT `fk_skin_set`
    FOREIGN KEY (`skin_set`)
    REFERENCES `bitskins_csgo`.`skin_set` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_skin_rarity`
    FOREIGN KEY (`skin_rarity`)
    REFERENCES `bitskins_csgo`.`skin_rarity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_weapon`
    FOREIGN KEY (`weapon`)
    REFERENCES `bitskins_csgo`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`agent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`agent` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`sticker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`sticker` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`item_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`item_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`skin_sell_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`skin_sell_order` (
  `name` VARCHAR(255) NOT NULL,
  `market_name` VARCHAR(45) NULL,
  `item_state` INT NULL,
  `price` FLOAT NULL,
  `recommanded_price` FLOAT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  `skin` INT NULL,
  `agent` INT NULL,
  `sticker` INT NULL,
  `item_type` INT NULL,
  INDEX `fk_state_idx` (`item_state` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `sell_order_id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_skin_idx` (`skin` ASC) VISIBLE,
  INDEX `fk_agent_idx` (`agent` ASC) VISIBLE,
  INDEX `fk_item_type_idx` (`item_type` ASC) VISIBLE,
  INDEX `fk_sticker_idx` (`sticker` ASC) VISIBLE,
  CONSTRAINT `fk_item_state`
    FOREIGN KEY (`item_state`)
    REFERENCES `bitskins_csgo`.`skin_state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_skin`
    FOREIGN KEY (`skin`)
    REFERENCES `bitskins_csgo`.`skin` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent`
    FOREIGN KEY (`agent`)
    REFERENCES `bitskins_csgo`.`agent` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sticker`
    FOREIGN KEY (`sticker`)
    REFERENCES `bitskins_csgo`.`sticker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_skin_sell_order_to_item_type`
    FOREIGN KEY (`item_type`)
    REFERENCES `bitskins_csgo`.`item_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`business_query`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`business_query` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `query` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`orm_mapping`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`orm_mapping` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `JSON_NAME` VARCHAR(255) NULL,
  `OBJECT_NAME` VARCHAR(255) NULL,
  `SQL_NAME` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bitskins_csgo`.`dumb_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bitskins_csgo`.`dumb_item` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `item_type` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_item_type_idx` (`item_type` ASC) VISIBLE,
  CONSTRAINT `fk_dumb_item_to_item_type`
    FOREIGN KEY (`item_type`)
    REFERENCES `bitskins_csgo`.`item_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `bitskins_csgo`.`skin_state`
-- -----------------------------------------------------
START TRANSACTION;
USE `bitskins_csgo`;
INSERT INTO `bitskins_csgo`.`skin_state` (`id`, `name`) VALUES (0, 'UNKONWN');
INSERT INTO `bitskins_csgo`.`skin_state` (`id`, `name`) VALUES (1, 'Battle-Scarred');
INSERT INTO `bitskins_csgo`.`skin_state` (`id`, `name`) VALUES (2, 'Well-Worn');
INSERT INTO `bitskins_csgo`.`skin_state` (`id`, `name`) VALUES (3, 'Field-Tested');
INSERT INTO `bitskins_csgo`.`skin_state` (`id`, `name`) VALUES (4, 'Minimal-Wear');
INSERT INTO `bitskins_csgo`.`skin_state` (`id`, `name`) VALUES (5, 'Factory-New');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bitskins_csgo`.`skin_set`
-- -----------------------------------------------------
START TRANSACTION;
USE `bitskins_csgo`;
INSERT INTO `bitskins_csgo`.`skin_set` (`id`, `name`) VALUES (0, 'UNKNOWN');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bitskins_csgo`.`skin_rarity`
-- -----------------------------------------------------
START TRANSACTION;
USE `bitskins_csgo`;
INSERT INTO `bitskins_csgo`.`skin_rarity` (`id`, `name`) VALUES (0, 'Unknown');
INSERT INTO `bitskins_csgo`.`skin_rarity` (`id`, `name`) VALUES (1, 'Consumer Grade');
INSERT INTO `bitskins_csgo`.`skin_rarity` (`id`, `name`) VALUES (2, 'Industrial Grade');
INSERT INTO `bitskins_csgo`.`skin_rarity` (`id`, `name`) VALUES (3, 'Mil-Spec Grade');
INSERT INTO `bitskins_csgo`.`skin_rarity` (`id`, `name`) VALUES (4, 'Restricted');
INSERT INTO `bitskins_csgo`.`skin_rarity` (`id`, `name`) VALUES (5, 'Classified');
INSERT INTO `bitskins_csgo`.`skin_rarity` (`id`, `name`) VALUES (6, 'Covert');
INSERT INTO `bitskins_csgo`.`skin_rarity` (`id`, `name`) VALUES (7, 'Contraband');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bitskins_csgo`.`weapon_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `bitskins_csgo`;
INSERT INTO `bitskins_csgo`.`weapon_type` (`id`, `name`) VALUES (0, 'Unknown');
INSERT INTO `bitskins_csgo`.`weapon_type` (`id`, `name`) VALUES (1, 'Knife');
INSERT INTO `bitskins_csgo`.`weapon_type` (`id`, `name`) VALUES (2, 'Pistol');
INSERT INTO `bitskins_csgo`.`weapon_type` (`id`, `name`) VALUES (3, 'SMG');
INSERT INTO `bitskins_csgo`.`weapon_type` (`id`, `name`) VALUES (4, 'Rifle');
INSERT INTO `bitskins_csgo`.`weapon_type` (`id`, `name`) VALUES (5, 'Sniper Rifle');
INSERT INTO `bitskins_csgo`.`weapon_type` (`id`, `name`) VALUES (6, 'Shotgun');
INSERT INTO `bitskins_csgo`.`weapon_type` (`id`, `name`) VALUES (7, 'Machinegun');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bitskins_csgo`.`item_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `bitskins_csgo`;
INSERT INTO `bitskins_csgo`.`item_type` (`id`, `name`) VALUES (0, 'UNKNOWN');
INSERT INTO `bitskins_csgo`.`item_type` (`id`, `name`) VALUES (1, 'Skin');
INSERT INTO `bitskins_csgo`.`item_type` (`id`, `name`) VALUES (2, 'Agent');
INSERT INTO `bitskins_csgo`.`item_type` (`id`, `name`) VALUES (3, 'Sticker');
INSERT INTO `bitskins_csgo`.`item_type` (`id`, `name`) VALUES (4, 'Container');
INSERT INTO `bitskins_csgo`.`item_type` (`id`, `name`) VALUES (5, 'AFER');

COMMIT;

